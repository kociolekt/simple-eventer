{"version":3,"sources":["src/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,gBAAgB,IAApB;;IAEqB,a;AACnB,2BAAc;AAAA;;AACZ,SAAK,sBAAL,GAA8B,EAA9B;AACD;;;;uBAEE,I,EAAM,Q,EAAU;AACjB,UAAI,OAAO,KAAK,sBAAL,CAA4B,IAA5B,CAAP,KAA6C,WAAjD,EAA8D;AAC5D,aAAK,sBAAL,CAA4B,IAA5B,IAAoC,EAApC;AACD;;AAED,WAAK,sBAAL,CAA4B,IAA5B,EAAkC,IAAlC,CAAuC,QAAvC;AACD;;;yBAEI,I,EAAqB;AAAA,UAAf,MAAe,yDAAN,IAAM;;AACxB,UACE,QAAQ,EADV;UAEE,kBAFF;;AAIA,UAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC5B,gBAAQ,EAAC,MAAM,IAAP,EAAR;AACD,OAFD,MAEO;AACL,cAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACD;AACD,UAAI,CAAC,MAAM,MAAX,EAAmB;AACjB,cAAM,MAAN,GAAe,MAAf;AACD;;AAED,kBAAY,KAAK,sBAAL,CAA4B,MAAM,IAAlC,CAAZ;;AAEA,UAAI,qBAAqB,KAAzB,EAAgC;AAC9B,aAAK,IAAI,IAAI,CAAR,EAAW,MAAM,UAAU,MAAhC,EAAwC,IAAI,GAA5C,EAAiD,GAAjD,EAAsD;AACpD,oBAAU,CAAV,EAAa,IAAb,CAAkB,IAAlB,EAAwB,KAAxB;AACD;AACF;AACF;;;wBAEG,I,EAAM,Q,EAAU;AAClB,UAAI,yBAAyB,KAAK,sBAAL,CAA4B,IAA5B,CAA7B;AACA,UAAI,kCAAkC,KAAtC,EAA6C;AAC3C,aAAK,IAAI,IAAI,CAAR,EAAW,MAAM,uBAAuB,MAA7C,EAAqD,IAAI,GAAzD,EAA8D,GAA9D,EAAmE;AACjE,cAAI,uBAAuB,CAAvB,MAA8B,QAAlC,EAA4C;AAC1C,mCAAuB,MAAvB,CAA8B,CAA9B,EAAiC,CAAjC;AACA;AACD;AACF;AACF;AACF;;;uBAES,I,EAAM,Q,EAAU;AACxB,aAAO,cAAc,EAAd,CAAiB,IAAjB,EAAuB,QAAvB,CAAP;AACD;;;yBAEW,I,EAAqB;AAAA,UAAf,MAAe,yDAAN,IAAM;;AAC/B,aAAO,cAAc,IAAd,CAAmB,IAAnB,EAAyB,MAAzB,CAAP;AACD;;;wBAEU,I,EAAM,Q,EAAU;AACzB,aAAO,cAAc,GAAd,CAAkB,IAAlB,EAAwB,QAAxB,CAAP;AACD;;;;;;kBA1DkB,a;;;AA6DrB,gBAAgB,IAAI,aAAJ,EAAhB","file":"index.js","sourcesContent":["let staticEventer = null;\n\nexport default class SimpleEventer {\n  constructor() {\n    this.simpleEventerListeners = {};\n  }\n\n  on(type, listener) {\n    if (typeof this.simpleEventerListeners[type] === 'undefined') {\n      this.simpleEventerListeners[type] = [];\n    }\n\n    this.simpleEventerListeners[type].push(listener);\n  }\n\n  fire(type, target = this) {\n    let\n      event = {},\n      listeners;\n\n    if (typeof type === 'string') {\n      event = {type: type};\n    } else {\n      throw new Error('Wrong event name type.');\n    }\n    if (!event.target) {\n      event.target = target;\n    }\n\n    listeners = this.simpleEventerListeners[event.type];\n\n    if (listeners instanceof Array) {\n      for (let i = 0, len = listeners.length; i < len; i++) {\n        listeners[i].call(this, event);\n      }\n    }\n  }\n\n  off(type, listener) {\n    let simpleEventerListeners = this.simpleEventerListeners[type];\n    if (simpleEventerListeners instanceof Array) {\n      for (let i = 0, len = simpleEventerListeners.length; i < len; i++) {\n        if (simpleEventerListeners[i] === listener) {\n          simpleEventerListeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  static on(type, listener) {\n    return staticEventer.on(type, listener);\n  }\n\n  static fire(type, target = this) {\n    return staticEventer.fire(type, target);\n  }\n\n  static off(type, listener) {\n    return staticEventer.off(type, listener);\n  }\n}\n\nstaticEventer = new SimpleEventer();\n"]}